// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package user

import (
	"context"

	"go-rest/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Empty        = pb.Empty
	ListResponse = pb.ListResponse
	UserInfo     = pb.UserInfo
	UserRequest  = pb.UserRequest
	UserResponse = pb.UserResponse

	User interface {
		GetUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserResponse, error)
		GetAllUsers(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListResponse, error)
		CreateUser(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*UserResponse, error)
		UpdateUser(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*UserResponse, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) GetUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.GetUser(ctx, in, opts...)
}

func (m *defaultUser) GetAllUsers(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListResponse, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.GetAllUsers(ctx, in, opts...)
}

func (m *defaultUser) CreateUser(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*UserResponse, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.CreateUser(ctx, in, opts...)
}

func (m *defaultUser) UpdateUser(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*UserResponse, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.UpdateUser(ctx, in, opts...)
}
